{"ast":null,"code":"import _slicedToArray from \"/Users/na6im/Desktop/Dev/admix-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/na6im/Desktop/Dev/admix-test/src/EffectItem/index.js\";\nimport React, { useState, useRef } from 'react';\nimport { Conatiner, TextInput, Icon, InputContainer, ErrorText } from './styles';\nimport edit from \"./edit.svg\";\nimport checkmark from \"./checkmark.svg\";\nimport cross from \"./cross.svg\";\nexport default function EffectItem({\n  item,\n  index,\n  list,\n  onUpdateFunction\n}) {\n  const effect = item.label.length < 25 ? item.label : \"\".concat(item.label.substr(0, 25), \"...\");\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hover = _useState2[0],\n        setHover = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editMode = _useState4[0],\n        setEditMode = _useState4[1];\n\n  const _useState5 = useState(item.label),\n        _useState6 = _slicedToArray(_useState5, 2),\n        label = _useState6[0],\n        setLabel = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const inputRef = useRef(null);\n\n  function mouseOver() {\n    setHover(!hover);\n  }\n\n  function validateField(text) {\n    if (text !== item.label && text.length < 5) {\n      setError('Min 5 caracters');\n    } else if (text !== item.label && list.indexOf(text.toLowerCase()) !== -1) {\n      setError('item already exists');\n    } else {\n      onUpdateFunction(text, index);\n      setEditMode(!editMode);\n      setError(null);\n    }\n  }\n\n  async function setToEditMode() {\n    await setEditMode(!editMode);\n    inputRef.current.focus();\n  }\n\n  return React.createElement(Conatiner, {\n    onMouseEnter: mouseOver,\n    onMouseLeave: mouseOver,\n    title: item.label,\n    hover: hover,\n    edit: editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(InputContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    value: editMode ? label : effect,\n    disabled: !editMode,\n    ref: inputRef,\n    onMouseEnter: () => {\n      inputRef.current.focus();\n    },\n    onChange: text => {\n      setLabel(text.target.value);\n      setError(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(ErrorText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, error)), editMode && React.createElement(Icon, {\n    src: cross,\n    alt: \"cross\",\n    hover: hover,\n    edit: editMode,\n    onClick: () => {\n      setLabel(item.label);\n      setEditMode(!editMode);\n      setError(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Icon, {\n    src: editMode ? checkmark : edit,\n    alt: \"edit\",\n    hover: hover,\n    edit: editMode,\n    onClick: () => {\n      if (editMode) {\n        validateField(label);\n      } else {\n        setToEditMode();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/na6im/Desktop/Dev/admix-test/src/EffectItem/index.js"],"names":["React","useState","useRef","Conatiner","TextInput","Icon","InputContainer","ErrorText","EffectItem","item","index","list","onUpdateFunction","effect","label","length","substr","hover","setHover","editMode","setEditMode","setLabel","error","setError","inputRef","mouseOver","validateField","text","indexOf","toLowerCase","setToEditMode","current","focus","target","value","cross","checkmark","edit"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n  Conatiner,\n  TextInput,\n  Icon,\n  InputContainer,\n  ErrorText,\n} from './styles';\nimport edit from './edit.svg';\nimport checkmark from './checkmark.svg';\nimport cross from './cross.svg';\n\nexport default function EffectItem({ item, index, list, onUpdateFunction }) {\n  const effect =\n    item.label.length < 25 ? item.label : `${item.label.substr(0, 25)}...`;\n\n  const [hover, setHover] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [label, setLabel] = useState(item.label);\n  const [error, setError] = useState(null);\n  const inputRef = useRef(null);\n  function mouseOver() {\n    setHover(!hover);\n  }\n\n  function validateField(text) {\n    if (text !== item.label && text.length < 5) {\n      setError('Min 5 caracters');\n    } else if (text !== item.label && list.indexOf(text.toLowerCase()) !== -1) {\n      setError('item already exists');\n    } else {\n      onUpdateFunction(text, index);\n      setEditMode(!editMode);\n      setError(null);\n    }\n  }\n\n  async function setToEditMode() {\n    await setEditMode(!editMode);\n    inputRef.current.focus();\n  }\n\n  return (\n    <Conatiner\n      onMouseEnter={mouseOver}\n      onMouseLeave={mouseOver}\n      title={item.label}\n      hover={hover}\n      edit={editMode}\n    >\n      <InputContainer>\n        <TextInput\n          value={editMode ? label : effect}\n          disabled={!editMode}\n          ref={inputRef}\n          onMouseEnter={() => {\n            inputRef.current.focus();\n          }}\n          onChange={text => {\n            setLabel(text.target.value);\n            setError(null);\n          }}\n        />\n        <ErrorText>{error}</ErrorText>\n      </InputContainer>\n      {editMode && (\n        <Icon\n          src={cross}\n          alt=\"cross\"\n          hover={hover}\n          edit={editMode}\n          onClick={() => {\n            setLabel(item.label);\n            setEditMode(!editMode);\n            setError(null);\n          }}\n        />\n      )}\n      <Icon\n        src={editMode ? checkmark : edit}\n        alt=\"edit\"\n        hover={hover}\n        edit={editMode}\n        onClick={() => {\n          if (editMode) {\n            validateField(label);\n          } else {\n            setToEditMode();\n          }\n        }}\n      />\n    </Conatiner>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}